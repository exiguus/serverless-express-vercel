openapi: '3.0.2'
info:
  title: serverless-express-vercel
  description: Serverless Express Vercel Example
  version: '1.0.0'
servers:
  - url: /api

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: >-
        Enter the JWT token with the `Bearer: ` prefix, e.g. "Bearer abcde12345".
  schemas:
    Response:
      type: object
      properties:
        type:
          type: string
          enum:
            - success
            - error
        timestamp:
          type: string
          example: '1694274132'
        version:
          type: string
          example: '1.0.0'
      required:
        - type
        - timestamp
        - version
    ResponseError:
      type: object
      properties:
        type:
          type: string
          enum:
            - error
        status:
          type: string
          enum:
            - '401'
            - '404'
            - '403'
            - '500'
        message:
          type: string
        error:
          $ref: '#/components/schemas/Error'
      required:
        - type
        - status
        - message
      allOf:
        - $ref: '#/components/schemas/Response'
    ResponseSuccess:
      type: object
      properties:
        type:
          type: string
          enum:
            - success
        status:
          type: string
          example: '200'
          enum:
            - '200'
        message:
          type: string
      required:
        - type
        - status
        - message
      allOf:
        - $ref: '#/components/schemas/Response'
    Error:
      type: object
      properties:
        code:
          type: string
          example: 'invalid_token'
        message:
          type: string
          example: 'invalid token'
        name:
          type: string
          example: 'UnauthorizedError'
        inner:
          type: object
          properties:
            name:
              type: string
              example: 'JsonWebTokenError'
            message:
              type: string
              example: 'invalid token'
          required:
            - name
            - message
      required:
        - code
        - message
        - name
    Track:
      type: object
      properties:
        artist:
          type: string
          example: 'Daft Punk'
        title:
          type: string
          example: 'Get Lucky'
      required:
        - artist
        - title
    Info:
      type: object
      properties:
        ip:
          type: string
          example: '::1'
        userAgent:
          type: string
          example: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36'
        language:
          type: string
          example: 'en-US,en;q=0.9,de;q=0.8'
        timestamp:
          type: string
          example: '2023-09-11T19:58:57.316Z'
      required:
        - ip
        - timestamp
    InfoReqHeaders:
      type: object
      properties:
        x-forwarded-for:
          type: string
          example: '::1'
        user-agent:
          type: string
          example: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36'
        accept-language:
          type: string
          example: 'en-US,en;q=0.9,de;q=0.8'
        accept:
          type: string
          example: 'application/json'
        accept-enconding:
          type: string
          example: 'gzip, deflate, br'
        connection:
          type: string
          example: 'keep-alive'
        host:
          type: string
          example: 'localhost:8000'
        pragma:
          type: string
          example: 'no-cache'
        referer:
          type: string
          example: 'http://localhost:8000/'
        sec-fetch-dest:
          type: string
          example: 'empty'
        sec-fetch-mode:
          type: string
          example: 'cors'
        sec-fetch-site:
          type: string
          example: 'same-origin'
        upgrade-insecure-requests:
          type: string
          example: '1'
    Cache:
      type: object
      properties:
        all:
          type: array
          items:
            type: string
        groups:
          type: object
      required:
        - all
        - groups
    CachePerformance:
      type: array
      items:
        type: object
        properties:
          callCount:
            type: integer
            example: 1
          hitCount:
            type: integer
            example: 1
          hitRate:
            type: number
            example: 1
          hitRateLast100:
            type: number
            example: 1
          hitRateLast1000:
            type: number
            example: 1
          hitRateLast10000:
            type: number
            example: 1
          hitRateLast100000:
            type: number
            example: 1
          lastCacheHit:
            type: string
            example: '/api/track'
          lastCacheMiss:
            type: string
            example: '/api/track'
          missCount:
            type: integer
            example: 1
        required:
          - callCount
          - hitCount
          - hitRate
          - hitRateLast100
          - hitRateLast1000
          - hitRateLast10000
          - hitRateLast100000
          - lastCacheHit
          - lastCacheMiss
          - missCount
paths:
  /track:
    get:
      tags:
        - track
      summary: Get Track
      description: Get recent track
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseSuccess'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Track'
        '401':
          description: Error Access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Error Access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /info:
    get:
      tags:
        - info
      summary: Get Info
      description: Get User Info
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseSuccess'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Info'
        '401':
          description: Error Access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Error Access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /info/req/headers:
    get:
      tags:
        - info
      summary: Get Request Headers
      description: Get User Request Headers Info
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseSuccess'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/InfoReqHeaders'
        '401':
          description: Error Access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Error Access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /cache:
    get:
      tags:
        - cache
      summary: Get Cache
      description: Get Cache Info
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseSuccess'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Cache'
        '401':
          description: Error Access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Error Access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /cache/performance:
    get:
      tags:
        - cache
      summary: Get Cache Performance
      description: Get Cache Performance Info
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseSuccess'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/CachePerformance'
        '401':
          description: Error Access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Error Access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
security:
  - bearerAuth: []
  - searchParameter: []
